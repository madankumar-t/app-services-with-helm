apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: alb-internal-test
  annotations:
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": {"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:582683034382:certificate/9525c53b-6f25-44e2-9863-7c262f92deda
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/inbound-cidrs: 10.0.0.0/8
    external-dns.alpha.kubernetes.io/hostname: app-services.internal.example.com
    external-dns.alpha.kubernetes.io/ttl: "60"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /javaapi
            pathType: Prefix
            backend:
              service:
                name: javaapi
                port:
                  number: 8080
          - path: /nodeapi
            pathType: Prefix
            backend:
              service:
                name: nodeapi
                port:
                  number: 3000
          - path: /reactui
            pathType: Prefix
            backend:
              service:
                name: reactui
                port:
                  number: 3000
